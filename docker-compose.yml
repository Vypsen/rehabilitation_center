version: '3'
services:

    backend:
        # Для установки нужных пакетов используем не чистый образ, а инструкции из конкретного файла Dockerfile
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        container_name: backend
        restart: unless-stopped
#        extra_hosts:
#            - "host.docker.internal:host-gateway"
        tty: true
        working_dir: /var/www
        volumes:
            - .:/var/www # Монтируем локальную папку в контейнер как /var/www
        depends_on:
            - database

    # Nginx контейнер для вебсервера
    nginx:
        container_name: server
        # Используем готовый образ для nginx контейнера
        image: nginx:alpine
        restart: unless-stopped
        tty: true
        ports:
            - "80:80" # Внутренний порт контейнера пробрасываем на host машину
        volumes:
            - .:/var/www # Монтируем локальную папку в контейнер как /var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/ # Передаем в контейнер конфигурационные файлы nginx
        depends_on:
            - backend

#    node:
#        container_name: frontend
#        build:
#            context: .
#            dockerfile: ./docker/nodejs/Dockerfile
#        tty: true
#        ports:
#            - "5173:5173"
#        working_dir: /var/www
#        volumes:
#            - .:/var/www # Монтируем локальную папку в контейнер как /var/www

    database:
        container_name: db
        image: postgres:14.5
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - postgresql:/var/lib/postgresql/data/

volumes:
    postgresql:
        driver: local
